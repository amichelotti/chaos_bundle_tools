cmake_policy(VERSION 2.6)
cmake_minimum_required(VERSION 2.6)
cmake_policy(SET CMP0011 NEW)
option(BUILD_FORCE_32 "Set to ON to enable 32 bit compilation" OFF)
option(BUILD_FORCE_STATIC "Set static compilation" OFF)


IF( ( DEFINED ENV{CHAOS32}) OR BUILD_FORCE_32 )
    MESSAGE(STATUS "Enabling 32 bit Compilation")
    set (BUILD_FORCE_32 1)
    set (CMAKE_C_FLAGS "-m32")
    set (CMAKE_CXX_FLAGS "-m32")
    set (CMAKE_LINK_FLAGS "-m32")
ENDIF()

if( DEFINED ENV{CHAOS_BUNDLE} )
    MESSAGE(STATUS "Using $ENV{CHAOS_BUNDLE}")
    set (PROJECT_SOURCE_DIR $ENV{CHAOS_BUNDLE})
ELSE()
    MESSAGE(FATAL_ERROR "Please set CHAOS_BUNDLE environment")
ENDIF()

 IF(CHAOS_C_COMPILER)
 	MESSAGE(STATUS "Setting C compiler ${CHAOS_C_COMPILER}")
 	SET(CMAKE_C_COMPILER ${CHAOS_C_COMPILER})
 ENDIF()

 IF(CHAOS_CC_COMPILER)
 	MESSAGE(STATUS "Setting CC compiler ${CHAOS_CC_COMPILER}")
 	SET(CMAKE_CXX_COMPILER ${CHAOS_CC_COMPILER})
 ENDIF()

ADD_DEFINITIONS(-g -O2)
set(FrameworkLib $ENV{CHAOS_LINK_LIBRARY})
separate_arguments(FrameworkLib)

IF( (DEFINED ENV{CHAOS_STATIC}) OR BUILD_FORCE_STATIC )
	MESSAGE(STATUS "Enabling Static compilation")
	SET(BUILD_FORCE_STATIC 1)
	SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
	SET(CMAKE_EXE_LINKER_FLAGS "-static")
	SET(BUILD_SHARED_LIBRARIES OFF)
	SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
	SET(CMAKE_SHARED_LIBRARY_LINK_CC_FLAGS)

ELSE()
	add_definitions(-DBOOST_ALL_DYN_LINK)
ENDIF()

set(CMAKE_INSTALL_PREFIX ${PROJECT_SOURCE_DIR}/usr/local)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)

INCLUDE_DIRECTORIES(. ../.. ${PROJECT_SOURCE_DIR}/usr/local/include)
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/build ${PROJECT_SOURCE_DIR}/usr/local/lib)
